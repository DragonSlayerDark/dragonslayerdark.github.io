{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter } from '@ngrx/entity';\nimport * as ProductActions from '../actions/product.actions';\nexport const productsFeatureKey = 'products';\nexport const adapter = createEntityAdapter();\nexport const initialState = adapter.getInitialState({// additional entity state properties\n});\nexport const reducer = createReducer(initialState, on(ProductActions.addProduct, (state, action) => adapter.addOne(action.product, state)), on(ProductActions.upsertProduct, (state, action) => adapter.upsertOne(action.product, state)), on(ProductActions.addProducts, (state, action) => adapter.addMany(action.products, state)), on(ProductActions.upsertProducts, (state, action) => adapter.upsertMany(action.products, state)), on(ProductActions.updateProduct, (state, action) => adapter.updateOne(action.product, state)), on(ProductActions.updateProducts, (state, action) => adapter.updateMany(action.products, state)), on(ProductActions.deleteProduct, (state, action) => adapter.removeOne(action.id, state)), on(ProductActions.deleteProducts, (state, action) => adapter.removeMany(action.ids, state)), on(ProductActions.loadProductsSuccess, (state, action) => adapter.setAll(action.products, state)), on(ProductActions.loadProductsByIdSuccess, (state, action) => adapter.setAll(action.products, state)), on(ProductActions.loadProductsByPetTypeIdSuccess, (state, action) => adapter.setAll(action.products, state)), on(ProductActions.loadProductSuccess, (state, action) => adapter.setOne(action.product, state)), on(ProductActions.loadVaccineProductsSuccess, (state, action) => adapter.setAll(action.products, state)), on(ProductActions.clearProducts, state => adapter.removeAll(state)));\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors();","map":null,"metadata":{},"sourceType":"module"}