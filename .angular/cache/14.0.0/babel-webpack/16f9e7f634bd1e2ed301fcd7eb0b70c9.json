{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nexport let SharedService = /*#__PURE__*/(() => {\n  class SharedService {\n    constructor() {\n      this.Swal3 = Swal.mixin({\n        customClass: {\n          container: 'swalcontainer',\n          popup: 'swalpopup',\n          icon: 'swalicon',\n          title: 'swaltitle',\n          confirmButton: 'swalbutton swalaccept',\n          cancelButton: 'swalbutton swalcnl'\n        },\n        buttonsStyling: false\n      });\n    }\n\n    sendAlert(icon, title, text) {\n      this.Swal3.fire({\n        icon,\n        title,\n        text,\n        timer: 4000,\n        showConfirmButton: false // footer: '<a href>Why do I have this issue?</a>',\n\n      });\n    }\n\n    sendConfirmation(icon, title, text) {\n      return new Promise((res, rej) => {\n        this.Swal3.fire({\n          title,\n          text,\n          icon,\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Aceptar'\n        }).then(result => {\n          res(result);\n        });\n      });\n    }\n\n    sendInput(title, typeInput = \"text\", inputValidator, confirm = \"Confirm\", cancel = \"Cancel\") {\n      return Swal.fire({\n        title,\n        input: typeInput,\n        showCancelButton: true,\n        confirmButtonText: confirm,\n        cancelButtonText: cancel,\n        inputValidator\n      });\n    }\n\n    downloadURI(uri, name) {\n      var link = document.createElement(\"a\");\n      link.download = name;\n      link.href = uri;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link); // delete link;\n    }\n\n    dateInput(defaultDate) {\n      return new Promise((resolve, reject) => {\n        const inputDate = defaultValue => `\n      <input\n        id=\"datepicker\"\n        type=\"date\"\n        max=\"${new Date().toISOString().split('T')[0]}\"\n        value=\"${defaultValue}\"\n      />\n    `;\n\n        const showInput = defaultValue => {\n          this.Swal3.fire({\n            title: 'Seleccione Fecha de aplicacion',\n            html: inputDate(defaultValue),\n            showCancelButton: true,\n            confirmButtonText: 'Aceptar',\n            cancelButtonText: 'Cancelar',\n            preConfirm: () => {\n              const selectedDate = document.getElementById('datepicker').value;\n              const now = new Date();\n              const chosenDate = new Date(selectedDate);\n\n              if (chosenDate > now) {\n                // reset the value of the input element to the defaultValue\n                document.getElementById('datepicker').value = defaultValue;\n                this.Swal3.fire({\n                  icon: 'error',\n                  title: 'Error',\n                  text: 'La fecha seleccionada no puede ser futura'\n                });\n                return false;\n              } else {\n                return {\n                  date: selectedDate\n                };\n              }\n            }\n          }).then(result => {\n            if (result.isConfirmed && typeof result.value === 'object') {\n              resolve(result.value);\n            } else {\n              reject(new Error('User cancelled date input'));\n            }\n          });\n        };\n\n        const defaultDate = new Date().toISOString().split('T')[0]; // get the current date as the default value\n\n        showInput(defaultDate); // pass the default date value to the showInput function\n      });\n    }\n\n  }\n\n  SharedService.ɵfac = function SharedService_Factory(t) {\n    return new (t || SharedService)();\n  };\n\n  SharedService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SharedService,\n    factory: SharedService.ɵfac,\n    providedIn: 'root'\n  });\n  return SharedService;\n})();\nexport class Swal3 {\n  constructor() {\n    this.Swal3 = Swal.mixin({\n      customClass: {\n        container: 'swalcontainer',\n        popup: 'swalpopup',\n        icon: 'swalicon',\n        title: 'swaltitle',\n        confirmButton: 'swalbutton swalaccept',\n        cancelButton: 'swalbutton swalcnl'\n      },\n      buttonsStyling: false\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}