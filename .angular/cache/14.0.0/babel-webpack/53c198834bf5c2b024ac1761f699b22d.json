{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport * as fromPets from '../actions/pet.actions';\nimport { map, switchMap, tap } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"../services/pet.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"src/app/modules/shared/shared.service\";\nexport let PetEffects = /*#__PURE__*/(() => {\n  class PetEffects {\n    constructor(actions$, store, petService, router, shared) {\n      this.actions$ = actions$;\n      this.store = store;\n      this.petService = petService;\n      this.router = router;\n      this.shared = shared;\n      this.loadPets$ = createEffect(() => this.actions$.pipe(ofType(fromPets.loadPets), switchMap(({\n        userID\n      }) => this.petService.getPets(userID).pipe(map(x => fromPets.loadPetsSuccess({\n        pets: x.data\n      }))))));\n      this.insertPet$ = createEffect(() => {\n        return this.actions$.pipe(ofType(fromPets.addPet), switchMap(({\n          pet,\n          img\n        }) => this.petService.insertPet(pet, img).pipe(map(x => fromPets.addPetSuccess({\n          pet: x.data\n        })), tap(() => {\n          this.router.navigate(['home']);\n          this.shared.sendAlert('success', 'Mascota agregada', 'Su mascota ha sido agregada de forma exitosa');\n        }))));\n      });\n      this.updatePet$ = createEffect(() => {\n        return this.actions$.pipe(ofType(fromPets.updatePet), switchMap(({\n          pet,\n          img\n        }) => this.petService.updatePet(pet, img).pipe(map(x => fromPets.updatePetSuccess({\n          pet: x.data\n        })), tap(() => {\n          this.shared.sendAlert('success', 'Mascota modificada', 'Su mascota ha sido modificada de forma exitosa');\n          let route = this.router.url.replace(/\\d+/g, '');\n\n          if (route === '/my-pets/delete-pet/') {\n            window.location.reload();\n          } else if (route === '/my-pets/edit-pet/') {\n            this.router.navigate(['/my-pets', pet.id]).then(() => {\n              window.location.reload();\n            });\n          }\n        }))));\n      });\n      this.deletePet$ = createEffect(() => {\n        return this.actions$.pipe(ofType(fromPets.deletePet), switchMap(({\n          id\n        }) => this.petService.deletePet(id).pipe(switchMap(x => {\n          return [fromPets.deletePetSuccess({\n            pet: x.data\n          })];\n        }), tap(() => {\n          localStorage.removeItem('selectedPetID');\n          localStorage.removeItem('selectedPetTypeID');\n          this.router.navigate(['/profile', 'petslist']);\n          const Swal3 = Swal.mixin({\n            customClass: {\n              container: 'swalcontainer',\n              popup: 'swalpopup',\n              title: 'swaltitle',\n              confirmButton: 'swalbutton swalaccept',\n              cancelButton: 'swalbutton swalcnl'\n            },\n            buttonsStyling: false\n          });\n          Swal3.fire('Mascota eliminada', 'Su mascota ha sido eliminada, por favor seleccione otra mascota activa');\n        }))));\n      });\n    }\n\n  }\n\n  PetEffects.ɵfac = function PetEffects_Factory(t) {\n    return new (t || PetEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.Store), i0.ɵɵinject(i3.PetService), i0.ɵɵinject(i4.Router), i0.ɵɵinject(i5.SharedService));\n  };\n\n  PetEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PetEffects,\n    factory: PetEffects.ɵfac\n  });\n  return PetEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}