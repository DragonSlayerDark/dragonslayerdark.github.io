{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter } from '@ngrx/entity';\nimport * as UserActions from '../actions/user.actions';\nexport const usersFeatureKey = 'users';\nexport const adapter = createEntityAdapter();\nexport const initialState = adapter.getInitialState({// additional entity state properties\n});\nexport const reducer = createReducer(initialState, on(UserActions.addUser, (state, action) => adapter.addOne(action.user, state)), on(UserActions.upsertUser, (state, action) => adapter.upsertOne(action.user, state)), on(UserActions.addUsers, (state, action) => adapter.addMany(action.users, state)), on(UserActions.upsertUsers, (state, action) => adapter.upsertMany(action.users, state)), on(UserActions.updateUser, (state, action) => adapter.updateOne(action.user, state)), on(UserActions.updateUsers, (state, action) => adapter.updateMany(action.users, state)), on(UserActions.deleteUser, (state, action) => adapter.removeOne(action.id, state)), on(UserActions.deleteUsers, (state, action) => adapter.removeMany(action.ids, state)), on(UserActions.loadUsersSuccess, (state, action) => adapter.setAll(action.users, state)), on(UserActions.clearUsers, state => adapter.removeAll(state)));\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors();","map":null,"metadata":{},"sourceType":"module"}