{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { map, switchMap } from 'rxjs';\nimport * as fromSubCategory from '../actions/sub-category.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/sub-category.service\";\nexport let SubCategoryEffects = /*#__PURE__*/(() => {\n  class SubCategoryEffects {\n    constructor(actions$, subCategoryService) {\n      this.actions$ = actions$;\n      this.subCategoryService = subCategoryService;\n      this.loadSubCategories$ = createEffect(() => this.actions$.pipe(ofType(fromSubCategory.loadSubCategories), switchMap(({\n        id\n      }) => this.subCategoryService.getSubCategories(id).pipe(map(x => fromSubCategory.loadSubCategoriesSuccess({\n        subCategories: x.data\n      }))))));\n    }\n\n  }\n\n  SubCategoryEffects.ɵfac = function SubCategoryEffects_Factory(t) {\n    return new (t || SubCategoryEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.SubCategoryService));\n  };\n\n  SubCategoryEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SubCategoryEffects,\n    factory: SubCategoryEffects.ɵfac\n  });\n  return SubCategoryEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}