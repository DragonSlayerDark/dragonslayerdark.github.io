{"ast":null,"code":"import { select } from '@ngrx/store';\nimport { selectLoading } from './store/custom/selectors/pawl.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./modules/shared/loading/loading.component\";\n\nfunction AppComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"router-outlet\")(2, \"app-loading\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const data_r1 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !data_r1.loading);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    loading: a0\n  };\n};\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(store) {\n      this.store = store;\n      this.loading$ = this.store.pipe(select(selectLoading));\n    }\n\n    ngOnInit() {}\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Store));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 5,\n    consts: [[4, \"ngIf\"], [3, \"hidden\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_ng_container_0_Template, 3, 1, \"ng-container\", 0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpureFunction1(3, _c0, i0.ɵɵpipeBind1(1, 1, ctx.loading$)));\n      }\n    },\n    dependencies: [i2.NgIf, i3.RouterOutlet, i4.LoadingComponent, i2.AsyncPipe],\n    changeDetection: 0\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}