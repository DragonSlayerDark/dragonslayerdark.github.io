{"ast":null,"code":"import { select } from '@ngrx/store';\nimport { filter, map } from 'rxjs';\nimport { selectUrl } from 'src/app/store/router/router.selector';\nimport { addToken } from 'src/app/store/custom/actions/push-notifications.actions';\nimport { environment } from 'src/environments/environment';\nimport { loadNotification } from 'src/app/store/entities/actions/notification.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/service-worker\";\nimport * as i3 from \"src/app/auth_services/store/auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../shared/footer/footer.component\";\nimport * as i6 from \"../shared/header/header.component\";\nimport * as i7 from \"@angular/common\";\nexport let ClientComponent = /*#__PURE__*/(() => {\n  class ClientComponent {\n    constructor(store, swPush, auth) {\n      this.store = store;\n      this.swPush = swPush;\n      this.auth = auth;\n      this.VAPID_PUBLIC_KEY = 'BP3PXmOpJRum6yBC1Rzqor2bfnWGo4wGMSr0c51wrzH1HCM9clz1c6MvyrCVLIL3kToLmf_YzU2zLIY4Gde1tCw';\n      this.route = this.store.pipe(select(selectUrl)).pipe(filter(x => !!x), map(x => {\n        // remove the leading slash, and the rest after the second slash\n        return x.split('/')[1].split('/')[0];\n      }));\n    }\n\n    ngOnInit() {\n      if (navigator.serviceWorker) {\n        console.log(navigator.serviceWorker);\n        this.subscribeNotifications(); // this.notificar();\n      }\n    }\n\n    notificar() {\n      if (!('serviceWorker' in navigator)) {\n        throw new Error('No Service Worker support!');\n      }\n\n      if (!('PushManager' in window)) {\n        throw new Error('No Push API Support!');\n      }\n\n      if (!window.Notification) {\n        console.log('este navegador no soporta notificaciones');\n        return;\n      }\n\n      if (Notification.permission === 'granted') {\n        new Notification('Hola Mundo - granted');\n      } else if (Notification.permission !== 'denied') {\n        Notification.requestPermission(permission => {\n          // console.log(permission);\n          if (permission === 'granted') {\n            this.subscribeNotifications();\n            new Notification('Hola Mundo - pregunta');\n          }\n        });\n      }\n    }\n\n    subscribeNotifications() {\n      // console.log('isEnabled =>', this.swPush.isEnabled);\n      this.swPush.requestSubscription({\n        serverPublicKey: this.VAPID_PUBLIC_KEY\n      }).then(sub => {\n        const token = JSON.parse(JSON.stringify(sub));\n        this.store.dispatch(addToken({\n          devicePushNotifications: {\n            users_permissions_user: this.auth.getUser().id,\n            subscription: sub\n          }\n        })); // console.log('Token => ', token);\n        // console.log('pase', sub);\n        // this.notificar();\n      }).catch(err => console.error('uy :( ', err));\n      this.swPush.messages.subscribe(data => {\n        // console.log('data => ', data);\n        const title = 'Pawl';\n        const options = {\n          body: data.message,\n          icon: 'assets/logo.png',\n          image: `${environment.server}${data.Metadata.photo || undefined}`,\n          badge: 'assets/logo.png',\n          vibrate: [75, 75, 75, 75, 75, 75, 75, 75, 150, 150, 150, 450, 75, 75, 75, 75, 75, 525],\n          openUrl: '/',\n          data: {\n            url: 'https://google.com',\n            id: data.user_id\n          }\n        }; // console.log('options => ', options);\n\n        let notification = new Notification(`${title}`, options);\n        this.store.dispatch(loadNotification({\n          id: this.auth.getUser().id\n        }));\n\n        notification.onclick = function (event) {\n          event.preventDefault(); // prevent the browser from focusing the Notification's tab\n\n          window.open('https://mypawl.web.app/#/home', '_blank');\n        }; // new Notification(data.message);\n\n      });\n    }\n\n  }\n\n  ClientComponent.ɵfac = function ClientComponent_Factory(t) {\n    return new (t || ClientComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.SwPush), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n\n  ClientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClientComponent,\n    selectors: [[\"app-client\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[3, \"hsection\"], [1, \"container\", \"mx-auto\"], [1, \"fixed\", \"bottom-0\", \"left-0\", \"right-0\", \"bg-white\", \"shadow-2xl\", \"shadow-black\", \"pt-2\"]],\n    template: function ClientComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelement(3, \"router-outlet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"app-footer\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"hsection\", i0.ɵɵpipeBind1(1, 1, ctx.route));\n      }\n    },\n    dependencies: [i4.RouterOutlet, i5.FooterComponent, i6.HeaderComponent, i7.AsyncPipe],\n    styles: [\".container[_ngcontent-%COMP%]{min-height:calc(100vh + 150px)}\"]\n  });\n  return ClientComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}