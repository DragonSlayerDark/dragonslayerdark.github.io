{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { map, switchMap } from 'rxjs';\nimport * as fromCategory from '../actions/category.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/category.service\";\nexport let CategoryEffects = /*#__PURE__*/(() => {\n  class CategoryEffects {\n    constructor(actions$, categoryService) {\n      this.actions$ = actions$;\n      this.categoryService = categoryService;\n      this.loadCategories$ = createEffect(() => this.actions$.pipe(ofType(fromCategory.loadCategories), switchMap(({\n        id\n      }) => this.categoryService.getCategories(id).pipe(map(x => fromCategory.loadcategoriesSuccess({\n        categories: x.data\n      }))))));\n    }\n\n  }\n\n  CategoryEffects.ɵfac = function CategoryEffects_Factory(t) {\n    return new (t || CategoryEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.CategoryService));\n  };\n\n  CategoryEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryEffects,\n    factory: CategoryEffects.ɵfac\n  });\n  return CategoryEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}