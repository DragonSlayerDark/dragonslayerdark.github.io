{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter } from '@ngrx/entity';\nimport * as VaccineCardActions from '../actions/vaccine-card.actions';\nexport const vaccineCardsFeatureKey = 'vaccineCards';\nexport const adapter = createEntityAdapter();\nexport const initialState = adapter.getInitialState({// additional entity state properties\n});\nexport const reducer = createReducer(initialState, on(VaccineCardActions.addVaccineCardSuccess, (state, action) => adapter.addOne(action.vaccineCard, state)), on(VaccineCardActions.upsertVaccineCardSuccess, (state, action) => adapter.upsertOne(action.vaccineCard, state)), on(VaccineCardActions.addVaccineCards, (state, action) => adapter.addMany(action.vaccineCards, state)), on(VaccineCardActions.upsertVaccineCards, (state, action) => adapter.upsertMany(action.vaccineCards, state)), on(VaccineCardActions.updateVaccineCard, (state, action) => adapter.updateOne(action.vaccineCard, state)), on(VaccineCardActions.updateVaccineCards, (state, action) => adapter.updateMany(action.vaccineCards, state)), on(VaccineCardActions.deleteVaccineCard, (state, action) => adapter.removeOne(action.id, state)), on(VaccineCardActions.deleteVaccineCards, (state, action) => adapter.removeMany(action.ids, state)), // on(VaccineCardActions.loadVaccineCardsSuccess,\n//   (state, action) => adapter.setAll(action.vaccineCards, state)\n// ),\non(VaccineCardActions.clearVaccineCards, state => adapter.removeAll(state)));\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors();","map":null,"metadata":{},"sourceType":"module"}