{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter } from '@ngrx/entity';\nimport * as PetTypeActions from '../actions/pet-type.actions';\nexport const petTypesFeatureKey = 'petTypes';\nexport const adapter = createEntityAdapter();\nexport const initialState = adapter.getInitialState({// additional entity state properties\n});\nexport const reducer = createReducer(initialState, on(PetTypeActions.addPetType, (state, action) => adapter.addOne(action.petType, state)), on(PetTypeActions.upsertPetType, (state, action) => adapter.upsertOne(action.petType, state)), on(PetTypeActions.addPetTypes, (state, action) => adapter.addMany(action.petTypes, state)), on(PetTypeActions.upsertPetTypes, (state, action) => adapter.upsertMany(action.petTypes, state)), on(PetTypeActions.updatePetType, (state, action) => adapter.updateOne(action.petType, state)), on(PetTypeActions.updatePetTypes, (state, action) => adapter.updateMany(action.petTypes, state)), on(PetTypeActions.deletePetType, (state, action) => adapter.removeOne(action.id, state)), on(PetTypeActions.deletePetTypes, (state, action) => adapter.removeMany(action.ids, state)), on(PetTypeActions.loadPetTypesSuccess, (state, action) => adapter.setAll(action.petTypes, state)), on(PetTypeActions.clearPetTypes, state => adapter.removeAll(state)));\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors();","map":null,"metadata":{},"sourceType":"module"}