{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter } from '@ngrx/entity';\nimport * as MemorialActions from '../actions/memorial.actions';\nexport const memorialsFeatureKey = 'memorials';\nexport const adapter = createEntityAdapter();\nexport const initialState = adapter.getInitialState({// additional entity state properties\n});\nexport const reducer = createReducer(initialState, on(MemorialActions.addMemorial, (state, action) => adapter.addOne(action.memorial, state)), on(MemorialActions.upsertMemorial, (state, action) => adapter.upsertOne(action.memorial, state)), on(MemorialActions.addMemorials, (state, action) => adapter.addMany(action.memorials, state)), on(MemorialActions.upsertMemorials, (state, action) => adapter.upsertMany(action.memorials, state)), on(MemorialActions.updateMemorial, (state, action) => adapter.updateOne(action.memorial, state)), on(MemorialActions.updateMemorials, (state, action) => adapter.updateMany(action.memorials, state)), on(MemorialActions.deleteMemorial, (state, action) => adapter.removeOne(action.id, state)), on(MemorialActions.deleteMemorials, (state, action) => adapter.removeMany(action.ids, state)), on(MemorialActions.loadMemorialsSuccess, (state, action) => adapter.setAll(action.memorials, state)), on(MemorialActions.clearMemorials, state => adapter.removeAll(state)));\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors();","map":null,"metadata":{},"sourceType":"module"}