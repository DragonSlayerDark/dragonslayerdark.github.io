{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter } from '@ngrx/entity';\nimport * as PetActions from '../actions/pet.actions';\nexport const petsFeatureKey = 'pets';\nexport const adapter = createEntityAdapter(); //export const adapterPet: EntityAdapter<Pet> = createEntityAdapter<Pet>();\n\nexport const initialState = adapter.getInitialState({// additional entity state properties\n});\nexport const reducer = createReducer(initialState, on(PetActions.upsertPet, (state, action) => adapter.upsertOne(action.pet, state)), on(PetActions.addPets, (state, action) => adapter.addMany(action.pets, state)), on(PetActions.upsertPets, (state, action) => adapter.upsertMany(action.pets, state)), on(PetActions.updatePet, (state, action) => adapter.updateOne(action.pet, state)), on(PetActions.updatePets, (state, action) => adapter.updateMany(action.pets, state)), on(PetActions.deletePetSuccess, (state, action) => adapter.removeOne(action.pet.id, state)), on(PetActions.deletePets, (state, action) => adapter.removeMany(action.ids, state)), on(PetActions.loadPetsSuccess, (state, action) => adapter.setAll(action.pets, state)), on(PetActions.clearPets, state => adapter.removeAll(state)));\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors();","map":null,"metadata":{},"sourceType":"module"}