{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter } from '@ngrx/entity';\nimport * as AddressActions from '../actions/address.actions';\nexport const addressesFeatureKey = 'addresses';\nexport const adapter = createEntityAdapter();\nexport const initialState = adapter.getInitialState({// additional entity state properties\n});\nexport const reducer = createReducer(initialState, on(AddressActions.addAddressSuccess, (state, action) => adapter.addOne(action.address, state)), on(AddressActions.upsertAddress, (state, action) => adapter.upsertOne(action.address, state)), on(AddressActions.addAddresss, (state, action) => adapter.addMany(action.addresss, state)), on(AddressActions.upsertAddresss, (state, action) => adapter.upsertMany(action.addresss, state)), on(AddressActions.updateAddressSuccess, (state, action) => adapter.updateOne(action.address, state)), on(AddressActions.updateAddresss, (state, action) => adapter.updateMany(action.addresss, state)), on(AddressActions.deleteAddress, (state, action) => adapter.removeOne(action.id, state)), on(AddressActions.deleteAddresss, (state, action) => adapter.removeMany(action.ids, state)), on(AddressActions.loadAddressesSuccess, (state, action) => adapter.setAll(action.addresses, state)), on(AddressActions.clearAddresss, state => adapter.removeAll(state)));\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors();","map":null,"metadata":{},"sourceType":"module"}