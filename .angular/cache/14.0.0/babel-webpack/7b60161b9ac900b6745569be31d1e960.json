{"ast":null,"code":"import { filter, map } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PAWLLocalStorage } from 'src/app/exports/enums';\nimport { selectAllPets } from '../../entities/selectors/pet.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport let AppService = /*#__PURE__*/(() => {\n  class AppService {\n    constructor(store) {\n      this.store = store;\n      this.selectedPet$ = null;\n    }\n\n    onActivate() {\n      let scrollToTop = window.setInterval(() => {\n        let pos = window.pageYOffset;\n\n        if (pos > 0) {\n          window.scrollTo(0, pos - 20); // how far to scroll on each step\n        } else {\n          window.clearInterval(scrollToTop);\n        }\n      }, 16);\n    }\n\n    setPet() {\n      this.selectedPet$ = this.store.select(selectAllPets).pipe(tap(pets => console.log(pets[0])), filter(x => x.length != 0), map(pets => {\n        let selectedPetID = localStorage.getItem(PAWLLocalStorage.SELECTED_PET_ID) || pets[0].id;\n        let selectedPet = pets.find(pet => pet.id == selectedPetID);\n        const petInfo = {\n          petBreedId: selectedPet.attributes.pet_breed.data['id'],\n          petTypeId: selectedPet.attributes.pet_type.data['id'],\n          petSize: selectedPet.attributes.pet_size,\n          dob: selectedPet.attributes.dob,\n          gender: selectedPet.attributes.gender,\n          name: selectedPet.attributes.name\n        };\n\n        if (localStorage.getItem(PAWLLocalStorage.SELECTED_PET_ID) == null) {\n          localStorage.setItem(PAWLLocalStorage.SELECTED_PET_ID, selectedPet.id + \"\");\n        }\n\n        if (localStorage.getItem(PAWLLocalStorage.SELECTED_PET) == null) {\n          localStorage.setItem(PAWLLocalStorage.SELECTED_PET, JSON.stringify(petInfo) + \"\");\n        }\n\n        return selectedPet;\n      }));\n    }\n\n  }\n\n  AppService.ɵfac = function AppService_Factory(t) {\n    return new (t || AppService)(i0.ɵɵinject(i1.Store));\n  };\n\n  AppService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppService,\n    factory: AppService.ɵfac,\n    providedIn: 'root'\n  });\n  return AppService;\n})();","map":null,"metadata":{},"sourceType":"module"}