{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { map, switchMap } from 'rxjs';\nimport * as fromMemorials from '../actions/memorial.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/memorial.service\";\nexport let MemorialEffects = /*#__PURE__*/(() => {\n  class MemorialEffects {\n    constructor(actions$, memorialService) {\n      this.actions$ = actions$;\n      this.memorialService = memorialService;\n      this.loadMemorials$ = createEffect(() => this.actions$.pipe(ofType(fromMemorials.loadMemorials), switchMap(() => {\n        return this.memorialService.getMemorials().pipe(map(x => {\n          return fromMemorials.loadMemorialsSuccess({\n            memorials: x.data\n          });\n        }));\n      })));\n    }\n\n  }\n\n  MemorialEffects.ɵfac = function MemorialEffects_Factory(t) {\n    return new (t || MemorialEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.MemorialService));\n  };\n\n  MemorialEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MemorialEffects,\n    factory: MemorialEffects.ɵfac\n  });\n  return MemorialEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}