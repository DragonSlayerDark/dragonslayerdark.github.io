{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter } from '@ngrx/entity';\nimport * as DewormerActions from '../actions/dewormer.actions';\nexport const dewormersFeatureKey = 'dewormers';\nexport const adapter = createEntityAdapter();\nexport const initialState = adapter.getInitialState({// additional entity state properties\n});\nexport const reducer = createReducer(initialState, on(DewormerActions.addDewormerSuccess, (state, action) => adapter.addOne(action.dewormer, state)), on(DewormerActions.upsertDewormerSuccess, (state, action) => adapter.upsertOne(action.dewormer, state)), on(DewormerActions.addDewormers, (state, action) => adapter.addMany(action.dewormers, state)), on(DewormerActions.upsertDewormers, (state, action) => adapter.upsertMany(action.dewormers, state)), on(DewormerActions.updateDewormer, (state, action) => adapter.updateOne(action.dewormer, state)), on(DewormerActions.updateDewormers, (state, action) => adapter.updateMany(action.dewormers, state)), on(DewormerActions.deleteDewormer, (state, action) => adapter.removeOne(action.id, state)), on(DewormerActions.deleteDewormers, (state, action) => adapter.removeMany(action.ids, state)), on(DewormerActions.loadDewormers, (state, action) => adapter.setAll(action.dewormers, state)), on(DewormerActions.clearDewormers, state => adapter.removeAll(state)));\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors();","map":null,"metadata":{},"sourceType":"module"}