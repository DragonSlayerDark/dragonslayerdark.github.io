{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { map, switchMap } from 'rxjs';\nimport * as fromCommercials from '../actions/commercial.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/commercial.service\";\nexport let CommercialEffects = /*#__PURE__*/(() => {\n  class CommercialEffects {\n    constructor(actions$, commercialService) {\n      this.actions$ = actions$;\n      this.commercialService = commercialService;\n      this.loadCommercials$ = createEffect(() => this.actions$.pipe(ofType(fromCommercials.loadCommercials), switchMap(() => {\n        return this.commercialService.getCommercials().pipe(map(x => {\n          return fromCommercials.loadCommercialsSuccess({\n            commercials: x.data\n          });\n        }));\n      })));\n    }\n\n  }\n\n  CommercialEffects.ɵfac = function CommercialEffects_Factory(t) {\n    return new (t || CommercialEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.CommercialService));\n  };\n\n  CommercialEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommercialEffects,\n    factory: CommercialEffects.ɵfac\n  });\n  return CommercialEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}