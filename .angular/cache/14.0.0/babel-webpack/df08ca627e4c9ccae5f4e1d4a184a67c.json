{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { gql } from 'apollo-angular';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"apollo-angular\";\nexport let PanelService = /*#__PURE__*/(() => {\n  class PanelService {\n    constructor(http, apollo) {\n      this.http = http;\n      this.apollo = apollo;\n    }\n\n    getUsers() {\n      return this.http.get(`${environment.server}/api/users?populate=*`);\n    }\n\n    getOrders(userID, pending = false) {\n      //! TODO: Cambiar consulta GraphQL por variables en el query\n      return this.apollo.query({\n        query: gql`\n      query {\n        orders ${userID != null ? `(filters: {\n                    user : {\n                      id : {\n                        eq: ${userID}\n                        }\n                      }\n                      ${pending ? ', paid: { eq: false }' : ''}\n                    })` : ''} {\n          data {\n            id\n            attributes {\n              createdAt\n              subtotal\n              tax\n              paid\n              orderDate\n              products {\n                quantity\n                product {\n                  data {\n                    id\n                    attributes {\n                      name\n                      subtotal\n                      stripe_id\n                    }\n                  }\n                }\n              }\n              user {\n                data {\n                  attributes {\n                    email\n                  }\n                }\n              }\n              pet{\n                data {\n                  id\n                  attributes{\n                    name\n                    memorial\n                    photo{\n                      data{\n                        attributes{\n                          url\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          meta {\n            pagination {\n              total\n              page\n              pageSize\n              pageCount\n            }\n          }\n        }\n      }`\n      }).pipe(map(x => x.data['orders']));\n    }\n\n  }\n\n  PanelService.ɵfac = function PanelService_Factory(t) {\n    return new (t || PanelService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Apollo));\n  };\n\n  PanelService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PanelService,\n    factory: PanelService.ɵfac,\n    providedIn: 'root'\n  });\n  return PanelService;\n})();","map":null,"metadata":{},"sourceType":"module"}