{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport * as petTypesActions from '../actions/pet-type.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/pet-type.service\";\nimport * as i2 from \"@ngrx/effects\";\nexport let PetTypeEffects = /*#__PURE__*/(() => {\n  class PetTypeEffects {\n    constructor(petTypeService, actions$) {\n      this.petTypeService = petTypeService;\n      this.actions$ = actions$;\n      this.loadPetTypes$ = createEffect(() => {\n        return this.actions$.pipe(ofType(petTypesActions.loadPetTypes), switchMap(() => this.petTypeService.getTypes().pipe(map(data => petTypesActions.loadPetTypesSuccess({\n          petTypes: data\n        })), catchError(error => of(petTypesActions.failure({\n          error\n        }))))));\n      });\n    }\n\n  }\n\n  PetTypeEffects.ɵfac = function PetTypeEffects_Factory(t) {\n    return new (t || PetTypeEffects)(i0.ɵɵinject(i1.PetTypeService), i0.ɵɵinject(i2.Actions));\n  };\n\n  PetTypeEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PetTypeEffects,\n    factory: PetTypeEffects.ɵfac,\n    providedIn: 'root'\n  });\n  return PetTypeEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}