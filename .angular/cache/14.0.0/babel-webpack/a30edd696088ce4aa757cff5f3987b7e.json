{"ast":null,"code":"import { select } from '@ngrx/store';\nimport { selectRouteParam } from 'src/app/store/router/router.selector';\nimport { tap, map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { loadOrders, loadOrdersSuccess } from 'src/app/store/entities/actions/order.actions';\nimport { selectOrderById } from 'src/app/store/entities/selectors/order.selectors';\nimport { ofType } from '@ngrx/effects';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"src/app/auth_services/store/auth.service\";\nimport * as i3 from \"@ngrx/effects\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"payment-stripe-widgets\";\n\nfunction PayorderComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"payment\", 1);\n    i0.ɵɵelementStart(2, \"oxxo-button\", 2);\n    i0.ɵɵtext(3, \" Pagar con Oxxo \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const data_r1 = i0.ɵɵnextContext().ngIf;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"products\", data_r1.products)(\"pathConfirmation\", \"/payment/confirm\")(\"projectID\", ctx_r2.projectID)(\"userID\", ctx_r2.userID)(\"showAmountNextToButton\", true)(\"metadata\", ctx_r2.metadata)(\"email\", ctx_r2.email);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"metadata\", ctx_r2.metadata)(\"products\", data_r1.products)(\"pathConfirmation\", \"confirm\")(\"projectID\", ctx_r2.projectID)(\"userID\", ctx_r2.userID);\n  }\n}\n\nfunction PayorderComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, PayorderComponent_ng_container_0_ng_container_1_Template, 4, 12, \"ng-container\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const data_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", data_r1.products != null);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    products: a0\n  };\n};\n\nexport let PayorderComponent = /*#__PURE__*/(() => {\n  class PayorderComponent {\n    constructor(store, auth, actions, router) {\n      this.store = store;\n      this.auth = auth;\n      this.actions = actions;\n      this.router = router;\n      this.metadata = {};\n      this.userID = this.auth.getId().toString();\n      this.projectID = environment.projectID;\n      this.orderID = '';\n      this.email = this.auth.getEmail();\n      this.store.pipe(select(selectRouteParam('id')), tap(id => {\n        this.orderID = id;\n        this.metadata = {\n          orderID: id\n        };\n      }), take(1)).subscribe(); // at this point, cart is empty, so we need to load it from the server\n\n      this.store.dispatch(loadOrders({\n        userID: this.auth.getId()\n      }));\n      this.actions.pipe(ofType(loadOrdersSuccess), take(1)).subscribe(() => {\n        this.products$ = this.store.pipe(select(selectOrderById(parseInt(this.orderID))), map(order => {\n          if (!order || order.attributes.paid) {\n            this.router.navigate(['shop/orders']);\n            return;\n          }\n\n          const products = [];\n          order.attributes.products.forEach(item => {\n            products.push({\n              id: item.product.data.attributes.stripe_id,\n              quantity: item.quantity\n            });\n          });\n          return products;\n        }));\n      });\n    }\n\n    ngOnInit() {}\n\n  }\n\n  PayorderComponent.ɵfac = function PayorderComponent_Factory(t) {\n    return new (t || PayorderComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Actions), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  PayorderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PayorderComponent,\n    selectors: [[\"app-payorder\"]],\n    decls: 2,\n    vars: 5,\n    consts: [[4, \"ngIf\"], [3, \"products\", \"pathConfirmation\", \"projectID\", \"userID\", \"showAmountNextToButton\", \"metadata\", \"email\"], [1, \"p-2\", \"bg-yellow-400\", \"color:\", \"text-red-500\", \"font-bold\", 3, \"metadata\", \"products\", \"pathConfirmation\", \"projectID\", \"userID\"]],\n    template: function PayorderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PayorderComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpureFunction1(3, _c0, i0.ɵɵpipeBind1(1, 1, ctx.products$)));\n      }\n    },\n    dependencies: [i5.NgIf, i6.FormPaymentComponent, i6.OxxoPaymentComponent, i5.AsyncPipe]\n  });\n  return PayorderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}