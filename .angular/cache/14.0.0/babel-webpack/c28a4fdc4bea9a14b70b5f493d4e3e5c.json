{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter } from '@ngrx/entity';\nimport * as PetBreedActions from '../actions/pet-breed.actions';\nexport const petBreedsFeatureKey = 'petBreeds';\nexport const adapter = createEntityAdapter();\nexport const initialState = adapter.getInitialState({// additional entity state properties\n});\nexport const reducer = createReducer(initialState, on(PetBreedActions.addPetBreed, (state, action) => adapter.addOne(action.petBreed, state)), on(PetBreedActions.upsertPetBreed, (state, action) => adapter.upsertOne(action.petBreed, state)), on(PetBreedActions.addPetBreeds, (state, action) => adapter.addMany(action.petBreeds, state)), on(PetBreedActions.upsertPetBreeds, (state, action) => adapter.upsertMany(action.petBreeds, state)), on(PetBreedActions.updatePetBreed, (state, action) => adapter.updateOne(action.petBreed, state)), on(PetBreedActions.updatePetBreeds, (state, action) => adapter.updateMany(action.petBreeds, state)), on(PetBreedActions.deletePetBreed, (state, action) => adapter.removeOne(action.id, state)), on(PetBreedActions.deletePetBreeds, (state, action) => adapter.removeMany(action.ids, state)), on(PetBreedActions.loadPetBreedsSuccess, (state, action) => adapter.setAll(action.petBreeds, state)), on(PetBreedActions.clearPetBreeds, state => adapter.removeAll(state)));\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors();","map":null,"metadata":{},"sourceType":"module"}