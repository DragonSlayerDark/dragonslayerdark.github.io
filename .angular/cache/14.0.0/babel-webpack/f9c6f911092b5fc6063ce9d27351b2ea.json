{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter } from '@ngrx/entity';\nimport * as SubCategoryActions from '../actions/sub-category.actions';\nexport const subCategoriesFeatureKey = 'subCategories';\nexport const adapter = createEntityAdapter();\nexport const initialState = adapter.getInitialState({// additional entity state properties\n});\nexport const reducer = createReducer(initialState, on(SubCategoryActions.addSubCategory, (state, action) => adapter.addOne(action.subCategory, state)), on(SubCategoryActions.upsertSubCategory, (state, action) => adapter.upsertOne(action.subCategory, state)), on(SubCategoryActions.addSubCategories, (state, action) => adapter.addMany(action.subCategories, state)), on(SubCategoryActions.upsertSubCategories, (state, action) => adapter.upsertMany(action.subCategories, state)), on(SubCategoryActions.updateSubCategory, (state, action) => adapter.updateOne(action.subCategory, state)), on(SubCategoryActions.updateSubCategories, (state, action) => adapter.updateMany(action.subCategories, state)), on(SubCategoryActions.deleteSubCategory, (state, action) => adapter.removeOne(action.id, state)), on(SubCategoryActions.deleteSubCategories, (state, action) => adapter.removeMany(action.ids, state)), on(SubCategoryActions.loadSubCategoriesSuccess, (state, action) => adapter.setAll(action.subCategories, state)), on(SubCategoryActions.clearSubCategories, state => adapter.removeAll(state)));\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors();","map":null,"metadata":{},"sourceType":"module"}