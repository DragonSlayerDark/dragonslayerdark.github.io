{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { gql } from 'apollo-angular';\nimport { map } from 'rxjs';\nimport { PAWLLocalStorage } from 'src/app/exports/enums';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"apollo-angular\";\nexport let PetService = /*#__PURE__*/(() => {\n  class PetService {\n    constructor(http, apollo) {\n      this.http = http;\n      this.apollo = apollo;\n    } // getPets() {\n    //   return this.http.get<PetPayload>(environment.server + '/api/pets?populate=*');\n    // }\n\n\n    getPets(userID) {\n      return this.apollo.query({\n        query: gql`\n      query{\n  pets(filters: { user: { id :{contains: \"${userID}\"}\n    }})\n  {\n    data{\n      id\n      attributes{\n        name\n        memorial\n        fallecimiento\n        photo{\n          data{\n            id\n            attributes{\n              name\n              url\n            }\n          }\n        }\n        dob\n        gender\n        user{\n          data{\n            id\n            attributes{\n              email\n            }\n          }\n        }\n        pet_size\n        pet_type{\n          data{\n            id\n            attributes{\n              name\n            }\n          }\n        }\n        pet_breed{\n          data{\n            id\n            attributes{\n              name\n            }\n          }\n        }\n        pet_second_breed{\n          data{\n            id\n            attributes{\n              name\n            }\n          }\n        }\n        vaccine_card{\n          id\n          vaccine_card{\n          data{\n            id\n            attributes{\n              name\n            }\n          }\n        }\n        }\n        vaccine_history{\n          id\n          date\n          license\n        }\n      }\n    }\n  }\n}\n      `\n      }).pipe(map(x => x.data['pets']));\n    }\n\n    insertPet(pet, img) {\n      const formData = new FormData();\n      formData.append('data', JSON.stringify(Object.assign({}, pet)));\n      formData.append('files.photo', img);\n      return this.http.post(environment.server + '/api/pets?populate=*', formData);\n    }\n\n    updatePet(pet, img) {\n      const formData = new FormData();\n      formData.append('data', JSON.stringify(Object.assign({}, pet)));\n      formData.append('files.photo', img);\n      return this.http.put(environment.server + `/api/pets/${pet.id}?populate=*`, formData);\n    }\n\n    deletePet(petId) {\n      return this.http.delete(environment.server + `/api/pets/${petId}`);\n    }\n\n    setPet(petId, petTypeId) {\n      const currentPet = JSON.parse(localStorage.getItem(PAWLLocalStorage.SELECTED_PET));\n      const petInfo = {\n        petBreedId: currentPet.petBreedId,\n        petTypeId: petTypeId,\n        petSize: currentPet.petSize,\n        dob: currentPet.dob,\n        gender: currentPet.gender,\n        name: currentPet.name\n      };\n      localStorage.setItem(PAWLLocalStorage.SELECTED_PET, JSON.stringify(petInfo) + \"\");\n      localStorage.setItem('selectedPetID', petId + \"\");\n      localStorage.setItem('selectedPetTypeID', petTypeId + \"\");\n    }\n\n  }\n\n  PetService.ɵfac = function PetService_Factory(t) {\n    return new (t || PetService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Apollo));\n  };\n\n  PetService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PetService,\n    factory: PetService.ɵfac,\n    providedIn: 'root'\n  });\n  return PetService;\n})();","map":null,"metadata":{},"sourceType":"module"}