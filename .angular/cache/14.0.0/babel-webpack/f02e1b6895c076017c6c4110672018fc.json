{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter } from '@ngrx/entity';\nimport * as CategoryActions from '../actions/category.actions';\nexport const categoriesFeatureKey = 'categories';\nexport const adapter = createEntityAdapter();\nexport const initialState = adapter.getInitialState({// additional entity state properties\n});\nexport const reducer = createReducer(initialState, on(CategoryActions.addCategory, (state, action) => adapter.addOne(action.category, state)), on(CategoryActions.upsertCategory, (state, action) => adapter.upsertOne(action.category, state)), on(CategoryActions.addcategories, (state, action) => adapter.addMany(action.categories, state)), on(CategoryActions.upsertcategories, (state, action) => adapter.upsertMany(action.categories, state)), on(CategoryActions.updateCategory, (state, action) => adapter.updateOne(action.category, state)), on(CategoryActions.updatecategories, (state, action) => adapter.updateMany(action.categories, state)), on(CategoryActions.deleteCategory, (state, action) => adapter.removeOne(action.id, state)), on(CategoryActions.deletecategories, (state, action) => adapter.removeMany(action.ids, state)), on(CategoryActions.loadcategoriesSuccess, (state, action) => adapter.setAll(action.categories, state)), on(CategoryActions.clearcategories, state => adapter.removeAll(state)));\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors();","map":null,"metadata":{},"sourceType":"module"}