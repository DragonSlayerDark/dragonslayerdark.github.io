{"ast":null,"code":"import { __awaiter } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, Component, Input, Output, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i1 from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport * as i2 from '@angular/forms';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport * as i3 from '@angular/router';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"projectID\", \"\", \"userID\", \"\"];\nconst _c1 = [\"products\", \"\", \"pathConfirmation\", \"\", \"projectID\", \"\", \"userID\", \"\", \"email\", \"\"];\n\nfunction FormPaymentComponent_form_1_div_3_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"img\", 19);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormPaymentComponent_form_1_div_3_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"img\", 20);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormPaymentComponent_form_1_div_3_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"img\", 21);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormPaymentComponent_form_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\")(2, \"div\", 14);\n    i0.ɵɵelement(3, \"input\", 15);\n    i0.ɵɵelementStart(4, \"span\", 16);\n    i0.ɵɵtemplate(5, FormPaymentComponent_form_1_div_3_span_5_Template, 2, 0, \"span\", 17);\n    i0.ɵɵtemplate(6, FormPaymentComponent_form_1_div_3_span_6_Template, 2, 0, \"span\", 17);\n    i0.ɵɵtemplate(7, FormPaymentComponent_form_1_div_3_span_7_Template, 2, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 18);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementStart(10, \"small\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const card_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", card_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", card_r4.brand);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"visa\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"mastercard\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"amex\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \\u2022\\u2022\\u2022\\u2022 \", card_r4.last4, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"(\", card_r4.exp_month, \"/\", card_r4.exp_year, \")\");\n  }\n}\n\nfunction FormPaymentComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 10);\n    i0.ɵɵlistener(\"ngSubmit\", function FormPaymentComponent_form_1_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.submitPaymentWithSavedCard());\n    });\n    i0.ɵɵtext(1, \" Elige una tarjeta \");\n    i0.ɵɵelementStart(2, \"fieldset\", 11);\n    i0.ɵɵtemplate(3, FormPaymentComponent_form_1_div_3_Template, 12, 8, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 13);\n    i0.ɵɵelement(5, \"div\", 7);\n    i0.ɵɵelementStart(6, \"span\", 8);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.cardsForm);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.cards);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.buttonLabelProcessed);\n  }\n}\n\nfunction FormPaymentComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Total: \", i0.ɵɵpipeBind1(2, 1, ctx_r1.total), \" \");\n  }\n}\n\nfunction FormPaymentComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" O agrega una nueva tarjeta \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c2 = [\"products\", \"\", \"pathConfirmation\", \"\", \"projectID\", \"\", \"userID\", \"\"];\nconst _c3 = [\"*\"];\nconst _c4 = [\"projectID\", \"\", \"userID\", \"\", \"pathConfirmation\", \"\", \"productID\", \"\"];\n\nfunction CardsComponent_div_0_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"img\", 5);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CardsComponent_div_0_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"img\", 6);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CardsComponent_div_0_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"img\", 7);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CardsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\")(2, \"div\", 1)(3, \"span\", 2);\n    i0.ɵɵtemplate(4, CardsComponent_div_0_span_4_Template, 2, 0, \"span\", 3);\n    i0.ɵɵtemplate(5, CardsComponent_div_0_span_5_Template, 2, 0, \"span\", 3);\n    i0.ɵɵtemplate(6, CardsComponent_div_0_span_6_Template, 2, 0, \"span\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 4);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementStart(9, \"small\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngSwitch\", card_r1.brand);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"visa\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"mastercard\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"amex\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \\u2022\\u2022\\u2022\\u2022 \", card_r1.last4, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"(\", card_r1.exp_month, \"/\", card_r1.exp_year, \")\");\n  }\n}\n\nconst _c5 = \"[_nghost-%COMP%]{font-family:Arial,sans-serif}.row[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;margin-bottom:15px}.row[_ngcontent-%COMP%]   .digits[_ngcontent-%COMP%]{margin-left:10px}#payment-form[_ngcontent-%COMP%]{width:30vw;min-width:500px;align-self:center;box-shadow:0 0 0 .5px #32325d1a,0 2px 5px #32325d1a,0 1px 1.5px #00000012;border-radius:7px;padding:40px}.hidden[_ngcontent-%COMP%]{display:none}#payment-message[_ngcontent-%COMP%]{color:#697386;font-size:16px;line-height:20px;padding-top:12px;text-align:center}#payment-element[_ngcontent-%COMP%]{margin-bottom:24px}button[_ngcontent-%COMP%]{background:#5469d4;font-family:Arial,sans-serif;color:#fff;border-radius:4px;border:0;padding:12px 16px;font-size:16px;font-weight:600;cursor:pointer;display:block;transition:all .2s ease;box-shadow:0 4px 5.5px #00000012;width:100%}button[_ngcontent-%COMP%]:hover{filter:contrast(115%)}button[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:default}.spinner[_ngcontent-%COMP%], .spinner[_ngcontent-%COMP%]:before, .spinner[_ngcontent-%COMP%]:after{border-radius:50%}.spinner[_ngcontent-%COMP%]{color:#fff;font-size:22px;text-indent:-99999px;margin:0 auto;position:relative;width:20px;height:20px;box-shadow:inset 0 0 0 2px;transform:translateZ(0)}.spinner[_ngcontent-%COMP%]:before, .spinner[_ngcontent-%COMP%]:after{position:absolute;content:\\\"\\\"}.spinner[_ngcontent-%COMP%]:before{width:10.4px;height:20.4px;background:#5469d4;border-radius:20.4px 0 0 20.4px;top:-.2px;left:-.2px;transform-origin:10.4px 10.2px;animation:loading 2s infinite ease 1.5s}.spinner[_ngcontent-%COMP%]:after{width:10.4px;height:10.2px;background:#5469d4;border-radius:0 10.2px 10.2px 0;top:-.1px;left:10.2px;transform-origin:0px 10.2px;animation:loading 2s infinite ease}.total[_ngcontent-%COMP%]{text-align:right;font-size:16px;color:#697386;padding-top:12px;font-family:Arial,sans-serif}@keyframes loading{0%{transform:rotate(0)}to{transform:rotate(360deg)}}@media only screen and (max-width: 600px){#payment-form[_ngcontent-%COMP%]{width:80vw;min-width:initial}}\";\nlet PaymentService = /*#__PURE__*/(() => {\n  class PaymentService {\n    constructor(http, paymentModuleData) {\n      this.http = http;\n      this.paymentModuleData = paymentModuleData;\n      this.server = this.paymentModuleData.paymentServer;\n      this.stripe = Stripe(this.paymentModuleData.stripePublicKey);\n    }\n\n    createPaymentIntent(products, project, user, metadata) {\n      // return this.http.post<PaymentIntentResponse>(`${this.server}/intentPayment`, { products });\n      // set project, user as headers\n      return this.http.post(`${this.server}/intentPayment`, {\n        products,\n        metadata\n      }, {\n        headers: {\n          project,\n          user\n        }\n      });\n    }\n\n    getCards(project, user, email) {\n      return this.http.post(`${this.server}/getCards`, {\n        email\n      }, {\n        headers: {\n          project,\n          user\n        }\n      });\n    }\n\n    createSubscription(productID, project, user, pathConfirmation, pathCancelation, metadata) {\n      return this.http.post(`${this.server}/createSubscription`, {\n        productID,\n        cancelURL: pathCancelation,\n        successURL: window.location.origin + '/' + pathConfirmation,\n        metadata\n      }, {\n        headers: {\n          project,\n          user\n        }\n      });\n    }\n\n    checkSesssionID(sessionID, project, user) {\n      return this.http.post(`${this.server}/checkSesssionID?sessionID=${sessionID}`, {}, {\n        headers: {\n          project,\n          user\n        }\n      });\n    }\n\n    createOxxoPaymentSession(products, project, user, pathConfirmation, pathCancelation, metadata) {\n      return this.http.post(`${this.server}/createOxxoPaymentSession`, {\n        products,\n        cancelURL: window.location.origin + '/' + pathCancelation.replace(/^\\/?/, ''),\n        successURL: window.location.origin + '/' + pathConfirmation.replace(/^\\/?/, ''),\n        metadata\n      }, {\n        headers: {\n          project,\n          user\n        }\n      });\n    }\n\n  }\n\n  PaymentService.ɵfac = function PaymentService_Factory(t) {\n    return new (t || PaymentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('paymentModuleData'));\n  };\n\n  PaymentService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: PaymentService,\n    factory: PaymentService.ɵfac,\n    providedIn: 'root'\n  });\n  return PaymentService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ConfirmPaymentComponent = /*#__PURE__*/(() => {\n  class ConfirmPaymentComponent {\n    constructor(paymentService) {\n      this.paymentService = paymentService;\n      this.message = '';\n      this.messageSuccess = 'Tu pago fue exitoso. Gracias por tu compra!';\n      this.messageProcessing = 'Tu pago está siendo procesado.';\n      this.messageRequiresPaymentMethod = 'Tu pago fue rechazado, intenta nuevamente.';\n      this.messageUnexpectedError = 'Ocurrió un error inesperado.';\n      this.projectID = '';\n      this.userID = '';\n      this.response = new Subject();\n    }\n\n    ngOnInit() {\n      this.checkStatus();\n    }\n\n    checkStatus() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const clientSecret = new URLSearchParams(window.location.search).get(\"payment_intent_client_secret\");\n        const session_id = new URLSearchParams(window.location.search).get(\"session_id\");\n\n        if (!!clientSecret) {\n          // PaymentIntent\n          this.checkPaymentIntent(clientSecret);\n        } else if (!!session_id) {\n          // Suscription session\n          this.checkCheckoutSession(session_id);\n        }\n      });\n    }\n\n    checkPaymentIntent(clientSecret) {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (!clientSecret) {\n          console.log(\"No client secret found in URL, unable to fetch PaymentIntent.\");\n          return;\n        }\n\n        const {\n          paymentIntent\n        } = yield this.paymentService.stripe.retrievePaymentIntent(clientSecret);\n\n        switch (paymentIntent.status) {\n          case \"succeeded\":\n            this.response.next({\n              body: paymentIntent,\n              valid: true\n            });\n            this.showMessage(this.messageSuccess);\n            break;\n\n          case \"processing\":\n            this.response.next({\n              body: paymentIntent,\n              valid: true\n            });\n            this.showMessage(this.messageProcessing);\n            break;\n\n          case \"requires_payment_method\":\n            this.response.next({\n              body: paymentIntent,\n              valid: false\n            });\n            this.showMessage(this.messageRequiresPaymentMethod);\n            break;\n\n          default:\n            this.response.next({\n              body: paymentIntent,\n              valid: false\n            });\n            this.showMessage(this.messageUnexpectedError);\n            break;\n        }\n      });\n    }\n\n    showMessage(message) {\n      this.message = message;\n    }\n\n    checkCheckoutSession(session_id) {\n      this.paymentService.checkSesssionID(session_id, this.projectID, this.userID).subscribe(res => {\n        var _a, _b;\n\n        if ((_b = (_a = res.subscription) === null || _a === void 0 ? void 0 : _a.plan) === null || _b === void 0 ? void 0 : _b.active) {\n          this.response.next({\n            body: res,\n            valid: true\n          });\n          this.showMessage(this.messageSuccess);\n        } else {\n          this.response.next({\n            body: res,\n            valid: false\n          });\n          this.showMessage(this.messageUnexpectedError);\n        }\n      });\n    }\n\n  }\n\n  ConfirmPaymentComponent.ɵfac = function ConfirmPaymentComponent_Factory(t) {\n    return new (t || ConfirmPaymentComponent)(i0.ɵɵdirectiveInject(PaymentService));\n  };\n\n  ConfirmPaymentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ConfirmPaymentComponent,\n    selectors: [[\"confirm-payment\", \"projectID\", \"\", \"userID\", \"\"]],\n    inputs: {\n      messageSuccess: \"messageSuccess\",\n      messageProcessing: \"messageProcessing\",\n      messageRequiresPaymentMethod: \"messageRequiresPaymentMethod\",\n      messageUnexpectedError: \"messageUnexpectedError\",\n      projectID: \"projectID\",\n      userID: \"userID\"\n    },\n    outputs: {\n      response: \"response\"\n    },\n    attrs: _c0,\n    decls: 1,\n    vars: 1,\n    template: function ConfirmPaymentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(ctx.message);\n      }\n    }\n  });\n  return ConfirmPaymentComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FormPaymentComponent = /*#__PURE__*/(() => {\n  class FormPaymentComponent {\n    constructor(paymentService, fb, router, // to update the HTML with the hangeDetectionStrategy\n    cdr) {\n      this.paymentService = paymentService;\n      this.fb = fb;\n      this.router = router;\n      this.cdr = cdr;\n      this.products = [];\n      this.buttonLabel = 'Pagar';\n      this.pathConfirmation = '';\n      this.showEmailInput = false;\n      this.showAmountNextToButton = true;\n      this.projectID = '';\n      this.userID = '';\n      this.email = '';\n      this.buttonLabelProcessed = '';\n      this.metadata = {};\n      this.checked = false;\n      this.emailAddress = '';\n      this.total = '';\n      this.customerID = '';\n      this.destroy$ = new Subject();\n      this.cards = [];\n      this.cardsForm = this.fb.group({\n        card: this.fb.control(null, [Validators.required])\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.unsubscribe();\n    }\n\n    ngOnInit() {\n      this.createPaymentIntent();\n    }\n\n    createPaymentIntent() {\n      this.paymentService.createPaymentIntent(this.products, this.projectID, this.userID, Object.assign(Object.assign({}, this.metadata), {\n        email: this.email\n      })).subscribe(({\n        paymentIntent,\n        cards,\n        customerID\n      }) => {\n        this.cards = cards;\n        this.customerID = customerID;\n        this.total = (paymentIntent.amount / 100).toFixed(2);\n\n        if (this.showAmountNextToButton) {\n          this.buttonLabelProcessed = this.buttonLabel + ' $' + this.total;\n        }\n\n        const appearance = {\n          theme: 'stripe'\n        };\n        this.elements = this.paymentService.stripe.elements({\n          appearance,\n          clientSecret: paymentIntent.client_secret\n        });\n\n        if (this.showEmailInput) {\n          const linkAuthenticationElement = this.elements.create(\"linkAuthentication\");\n          linkAuthenticationElement.mount(\"#link-authentication-element\"); //@ts-ignore\n\n          linkAuthenticationElement.on('change', event => {\n            this.emailAddress = event.value.email;\n          });\n        }\n\n        const paymentElementOptions = {\n          layout: \"tabs\"\n        };\n        const paymentElement = this.elements.create(\"payment\", paymentElementOptions);\n        paymentElement.mount(\"#payment-element\");\n        this.cdr.detectChanges();\n      });\n    }\n\n    submitPayment(event) {\n      return __awaiter(this, void 0, void 0, function* () {\n        event.preventDefault();\n        this.setLoading(true);\n        const {\n          error\n        } = yield this.paymentService.stripe.confirmPayment({\n          elements: this.elements,\n          confirmParams: {\n            // detect the url from the current page, just before the first slash\n            // and remove JUST the first slash from pathConfirmation if it exists\n            return_url: window.location.origin + \"/\" + this.pathConfirmation.replace(/^\\/?/, ''),\n            receipt_email: this.emailAddress != '' ? this.emailAddress : null\n          }\n        }); // This point will only be reached if there is an immediate error when\n        // confirming the payment. Otherwise, your customer will be redirected to\n        // your `return_url`. For some payment methods like iDEAL, your customer will\n        // be redirected to an intermediate site first to authorize the payment, then\n        // redirected to the `return_url`.\n\n        if (error.type === \"card_error\" || error.type === \"validation_error\") {\n          this.showMessage(error.message);\n        } else {\n          this.showMessage(\"An unexpected error occurred.\");\n        }\n\n        this.setLoading(false);\n      });\n    }\n\n    submitPaymentWithSavedCard() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.cardsForm.invalid) {\n          return;\n        }\n\n        this.setLoading(true);\n        this.paymentService.createPaymentIntent(this.products, this.projectID, this.userID, Object.assign(Object.assign({}, this.metadata), {\n          email: this.email,\n          card: this.cardsForm.value.card\n        })).subscribe(({\n          paymentIntent,\n          customerID\n        }) => {\n          this.router.navigate([this.pathConfirmation], {\n            queryParams: {\n              payment_intent_client_secret: paymentIntent.client_secret\n            }\n          });\n        });\n      });\n    }\n\n    showMessage(messageText) {\n      const messageContainer = document.querySelector(\"#payment-message\"); //@ts-ignore\n\n      messageContainer.classList.remove(\"hidden\"); //@ts-ignore\n\n      messageContainer.textContent = messageText;\n      setTimeout(function () {\n        //@ts-ignore\n        messageContainer.classList.add(\"hidden\"); //@ts-ignore\n\n        messageContainer.textContent = \"\";\n      }, 4000);\n    }\n\n    setLoading(isLoading) {\n      if (isLoading) {\n        // Disable the button and show a spinner\n        document.querySelectorAll(\".submit\").forEach(element => {\n          element.disabled = true;\n        });\n        document.querySelectorAll(\".spinner\").forEach(element => {\n          element.classList.remove(\"hidden\");\n        }); // document.querySelector(\"#button-text\").classList.add(\"hidden\");\n\n        document.querySelectorAll(\".button-text\").forEach(element => {\n          element.classList.add(\"hidden\");\n        });\n      } else {\n        document.querySelectorAll(\".submit\").forEach(element => {\n          element.disabled = false;\n        });\n        document.querySelectorAll(\".spinner\").forEach(element => {\n          element.classList.add(\"hidden\");\n        });\n        document.querySelectorAll(\".button-text\").forEach(element => {\n          element.classList.remove(\"hidden\");\n        });\n      }\n    }\n\n  }\n\n  FormPaymentComponent.ɵfac = function FormPaymentComponent_Factory(t) {\n    return new (t || FormPaymentComponent)(i0.ɵɵdirectiveInject(PaymentService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  FormPaymentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FormPaymentComponent,\n    selectors: [[\"payment\", \"products\", \"\", \"pathConfirmation\", \"\", \"projectID\", \"\", \"userID\", \"\", \"email\", \"\"]],\n    inputs: {\n      products: \"products\",\n      buttonLabel: \"buttonLabel\",\n      pathConfirmation: \"pathConfirmation\",\n      showEmailInput: \"showEmailInput\",\n      showAmountNextToButton: \"showAmountNextToButton\",\n      projectID: \"projectID\",\n      userID: \"userID\",\n      email: \"email\",\n      metadata: \"metadata\"\n    },\n    attrs: _c1,\n    decls: 12,\n    vars: 4,\n    consts: [[\"id\", \"payment-form\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"total\", 4, \"ngIf\"], [\"style\", \"margin-bottom: 20px; margin-top: 20px;\", 4, \"ngIf\"], [\"id\", \"link-authentication-element\"], [\"id\", \"payment-element\"], [1, \"submit\", 3, \"click\"], [1, \"spinner\", \"hidden\"], [1, \"button-text\"], [\"id\", \"payment-message\", 1, \"hidden\"], [3, \"formGroup\", \"ngSubmit\"], [2, \"border\", \"none\"], [4, \"ngFor\", \"ngForOf\"], [1, \"submit\"], [1, \"row\"], [\"type\", \"radio\", \"formControlName\", \"card\", 3, \"value\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [1, \"digits\"], [\"src\", \"https://cdn.worldvectorlogo.com/logos/visa.svg\", \"alt\", \"\", 2, \"height\", \"35px\", \"width\", \"35px\"], [\"src\", \"https://cdn.worldvectorlogo.com/logos/mastercard-2.svg\", \"alt\", \"\", 2, \"height\", \"35px\", \"width\", \"35px\"], [\"src\", \"https://cdn.worldvectorlogo.com/logos/american-express-1.svg\", \"alt\", \"\", 2, \"height\", \"35px\", \"width\", \"35px\"], [1, \"total\"], [2, \"margin-bottom\", \"20px\", \"margin-top\", \"20px\"]],\n    template: function FormPaymentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, FormPaymentComponent_form_1_Template, 8, 3, \"form\", 1);\n        i0.ɵɵelementStart(2, \"form\");\n        i0.ɵɵtemplate(3, FormPaymentComponent_div_3_Template, 3, 3, \"div\", 2);\n        i0.ɵɵtemplate(4, FormPaymentComponent_div_4_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelement(5, \"div\", 4)(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function FormPaymentComponent_Template_button_click_7_listener($event) {\n          return ctx.submitPayment($event);\n        });\n        i0.ɵɵelement(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"span\", 8);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(11, \"div\", 9);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.cards.length != 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showAmountNextToButton);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.cards.length != 0);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.buttonLabelProcessed);\n      }\n    },\n    dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i4.NgForOf, i2.RadioControlValueAccessor, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i4.NgSwitch, i4.NgSwitchCase, i4.CurrencyPipe],\n    styles: [\"[_nghost-%COMP%]{font-family:Arial,sans-serif}.row[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;margin-bottom:15px}.row[_ngcontent-%COMP%]   .digits[_ngcontent-%COMP%]{margin-left:10px}#payment-form[_ngcontent-%COMP%]{width:30vw;min-width:500px;align-self:center;box-shadow:0 0 0 .5px #32325d1a,0 2px 5px #32325d1a,0 1px 1.5px #00000012;border-radius:7px;padding:40px}.hidden[_ngcontent-%COMP%]{display:none}#payment-message[_ngcontent-%COMP%]{color:#697386;font-size:16px;line-height:20px;padding-top:12px;text-align:center}#payment-element[_ngcontent-%COMP%]{margin-bottom:24px}button[_ngcontent-%COMP%]{background:#5469d4;font-family:Arial,sans-serif;color:#fff;border-radius:4px;border:0;padding:12px 16px;font-size:16px;font-weight:600;cursor:pointer;display:block;transition:all .2s ease;box-shadow:0 4px 5.5px #00000012;width:100%}button[_ngcontent-%COMP%]:hover{filter:contrast(115%)}button[_ngcontent-%COMP%]:disabled{opacity:.5;cursor:default}.spinner[_ngcontent-%COMP%], .spinner[_ngcontent-%COMP%]:before, .spinner[_ngcontent-%COMP%]:after{border-radius:50%}.spinner[_ngcontent-%COMP%]{color:#fff;font-size:22px;text-indent:-99999px;margin:0 auto;position:relative;width:20px;height:20px;box-shadow:inset 0 0 0 2px;transform:translateZ(0)}.spinner[_ngcontent-%COMP%]:before, .spinner[_ngcontent-%COMP%]:after{position:absolute;content:\\\"\\\"}.spinner[_ngcontent-%COMP%]:before{width:10.4px;height:20.4px;background:#5469d4;border-radius:20.4px 0 0 20.4px;top:-.2px;left:-.2px;transform-origin:10.4px 10.2px;animation:loading 2s infinite ease 1.5s}.spinner[_ngcontent-%COMP%]:after{width:10.4px;height:10.2px;background:#5469d4;border-radius:0 10.2px 10.2px 0;top:-.1px;left:10.2px;transform-origin:0px 10.2px;animation:loading 2s infinite ease}.total[_ngcontent-%COMP%]{text-align:right;font-size:16px;color:#697386;padding-top:12px;font-family:Arial,sans-serif}@keyframes loading{0%{transform:rotate(0)}to{transform:rotate(360deg)}}@media only screen and (max-width: 600px){#payment-form[_ngcontent-%COMP%]{width:80vw;min-width:initial}}\"],\n    changeDetection: 0\n  });\n  return FormPaymentComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet OxxoPaymentComponent = /*#__PURE__*/(() => {\n  class OxxoPaymentComponent {\n    constructor(paymentService) {\n      this.paymentService = paymentService;\n      this.products = [];\n      this.pathConfirmation = '';\n      this.pathCancelation = '';\n      this.projectID = '';\n      this.userID = '';\n      this.metadata = {};\n    }\n\n    ngOnInit() {}\n\n    checkout(event) {\n      event.preventDefault();\n      this.paymentService.createOxxoPaymentSession(this.products, this.projectID, this.userID, this.pathConfirmation, this.pathCancelation, this.metadata).subscribe(x => {\n        window.location.href = x.url;\n      });\n    }\n\n  }\n\n  OxxoPaymentComponent.ɵfac = function OxxoPaymentComponent_Factory(t) {\n    return new (t || OxxoPaymentComponent)(i0.ɵɵdirectiveInject(PaymentService));\n  };\n\n  OxxoPaymentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: OxxoPaymentComponent,\n    selectors: [[\"oxxo-button\", \"products\", \"\", \"pathConfirmation\", \"\", \"projectID\", \"\", \"userID\", \"\"]],\n    inputs: {\n      products: \"products\",\n      pathConfirmation: \"pathConfirmation\",\n      pathCancelation: \"pathCancelation\",\n      projectID: \"projectID\",\n      userID: \"userID\",\n      metadata: \"metadata\"\n    },\n    attrs: _c2,\n    ngContentSelectors: _c3,\n    decls: 2,\n    vars: 0,\n    consts: [[3, \"click\"]],\n    template: function OxxoPaymentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function OxxoPaymentComponent_Template_button_click_0_listener($event) {\n          return ctx.checkout($event);\n        });\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return OxxoPaymentComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet SubscriptionComponent = /*#__PURE__*/(() => {\n  class SubscriptionComponent {\n    constructor(paymentService) {\n      this.paymentService = paymentService;\n      this.projectID = '';\n      this.userID = '';\n      this.productID = '';\n      this.pathConfirmation = ''; // default value for this: url base\n\n      this.pathCancelation = window.location.origin;\n      this.metadata = {};\n    }\n\n    ngOnInit() {}\n\n    checkout(event) {\n      event.preventDefault();\n      this.paymentService.createSubscription(this.productID, this.projectID, this.userID, this.pathConfirmation, this.pathCancelation, this.metadata).subscribe(x => {\n        window.location.href = x.url;\n      });\n    }\n\n  }\n\n  SubscriptionComponent.ɵfac = function SubscriptionComponent_Factory(t) {\n    return new (t || SubscriptionComponent)(i0.ɵɵdirectiveInject(PaymentService));\n  };\n\n  SubscriptionComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SubscriptionComponent,\n    selectors: [[\"subscription-button\", \"projectID\", \"\", \"userID\", \"\", \"pathConfirmation\", \"\", \"productID\", \"\"]],\n    inputs: {\n      projectID: \"projectID\",\n      userID: \"userID\",\n      productID: \"productID\",\n      pathConfirmation: \"pathConfirmation\",\n      pathCancelation: \"pathCancelation\",\n      metadata: \"metadata\"\n    },\n    attrs: _c4,\n    ngContentSelectors: _c3,\n    decls: 2,\n    vars: 0,\n    consts: [[3, \"click\"]],\n    template: function SubscriptionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function SubscriptionComponent_Template_button_click_0_listener($event) {\n          return ctx.checkout($event);\n        });\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return SubscriptionComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CardsComponent = /*#__PURE__*/(() => {\n  class CardsComponent {\n    constructor(paymentService, cdr) {\n      this.paymentService = paymentService;\n      this.cdr = cdr;\n      this.cards = [];\n      this.projectID = '';\n      this.userID = '';\n      this.email = '';\n    }\n\n    ngOnInit() {\n      this.paymentService.getCards(this.projectID, this.userID, this.email).subscribe(cards => {\n        this.cards = cards;\n        this.cdr.detectChanges();\n      });\n    }\n\n  }\n\n  CardsComponent.ɵfac = function CardsComponent_Factory(t) {\n    return new (t || CardsComponent)(i0.ɵɵdirectiveInject(PaymentService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  CardsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CardsComponent,\n    selectors: [[\"cards\"]],\n    inputs: {\n      projectID: \"projectID\",\n      userID: \"userID\",\n      email: \"email\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [1, \"digits\"], [\"src\", \"https://cdn.worldvectorlogo.com/logos/visa.svg\", \"alt\", \"\", 2, \"height\", \"35px\", \"width\", \"35px\"], [\"src\", \"https://cdn.worldvectorlogo.com/logos/mastercard-2.svg\", \"alt\", \"\", 2, \"height\", \"35px\", \"width\", \"35px\"], [\"src\", \"https://cdn.worldvectorlogo.com/logos/american-express-1.svg\", \"alt\", \"\", 2, \"height\", \"35px\", \"width\", \"35px\"]],\n    template: function CardsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CardsComponent_div_0_Template, 11, 7, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.cards);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgSwitch, i4.NgSwitchCase],\n    styles: [_c5]\n  });\n  return CardsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PaymentModule = /*#__PURE__*/(() => {\n  class PaymentModule {\n    static forRoot(paymentModuleData) {\n      return {\n        ngModule: PaymentModule,\n        providers: [PaymentService, {\n          provide: 'paymentModuleData',\n          useValue: paymentModuleData\n        }]\n      };\n    }\n\n  }\n\n  PaymentModule.ɵfac = function PaymentModule_Factory(t) {\n    return new (t || PaymentModule)();\n  };\n\n  PaymentModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: PaymentModule\n  });\n  PaymentModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, HttpClientModule, ReactiveFormsModule]]\n  });\n  return PaymentModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\r\n * Public API Surface of payment-stripe-widgets\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { CardsComponent, ConfirmPaymentComponent, FormPaymentComponent, OxxoPaymentComponent, PaymentModule, SubscriptionComponent }; //# sourceMappingURL=payment-stripe-widgets.mjs.map","map":null,"metadata":{},"sourceType":"module"}